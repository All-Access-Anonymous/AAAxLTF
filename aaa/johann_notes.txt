|------=| Feb 14, 2022 |=------|

On starting Attendee behaviour:

	Each player is assigned a pre-determined "buy" date
	So we don't have to waste CPU resources rolling a dice
	for them to check if they'll buy every time they go through 
	their individual "day_assess". This also guarantees each 
	Attendee will eventually buy, and not just leave it to a
	tweakable likelihood with no guarantees.

	Since sim_handler is in charge of instantiating all attendees
	based on received configurations, we'll also assign the "buy"
	date of each Attendee there.

	The logic for determining the buy date for each and every Attendee is
	as follows:

	ticket_sale_duration: int

	Let SimHandler receive the config parameter called "ticket_sale_duration"
	( Wait a sec, I think I can further enhance it by following a distribution. I don't know
	which type yet. )
	Ticket sales are random but they're not that sporadic. There will be a section
	around the timeframe where the majority of the people buy.

	This calls for a truncated normal distribution. Akin to plotting the height 
	of a general population, the majority will localize to a region in the middle, 
	as there are few very extremely short people and very few tall people.

	There will be very few people still willing to buy a ticket at the final day of sale,
	when the ticket is at its highest price. The majority will be somewhere around the beginning,
	some will be in the middle, and the numbers continue to taper off to the end.

	GRAB HELP FROM NICK NOW.


|------=| Feb 15, 2022 |=------|

Allocate task of developing probability distribution function to Nick.
Assist BK.

NICK DELIVERED!

Integrating his function into SimHandler.
buy_day_generator's functions has been loaded with doc strings.

EDIT: It's not it.. Back to the drawing board.


|------=| Feb 16, 2022 |=------|

Fixing Ticket Price increase. It increases on each passing day, not after
each transaction. Done.

Don't give attendee a starting balance. The idea of the simulation is to observe
the revenue generated before a concert. Assume the player can afford it.

I'll leave the Attendee with a USDC balance still existing, but it's neither checked
as a prereq nor decremented during a transaction.

Market now has registry containing how many Tickets of each tier has been sold.
It will also contain how much profit is generated explicitly from each Tier.
